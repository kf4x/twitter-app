/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package twitterclient;

//import net.sf.json.JSONArray;

import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.scribe.builder.*;
import org.scribe.builder.api.TwitterApi;
import org.scribe.model.OAuthRequest;
import org.scribe.model.Token;
import org.scribe.model.Verb;
import org.scribe.model.Verifier;
import org.scribe.oauth.OAuthService;


/**
 *
 * @author javierAle
 */
public class LoginFrame extends javax.swing.JFrame {
    private static final String PROTECTED_RESOURCE_URL = "https://api.twitter.com/1/statuses/update.json";
    private static final String GET_USER_URL = "https://api.twitter.com/1/account/verify_credentials.json"; 
    /**
     * Creates new form LoginFrame
     */
    OAuthService service = new ServiceBuilder()
            .provider(TwitterApi.class)
            .apiKey("vrpGScMbttmL5U0ZzPCiMw")
            .apiSecret("qAlcUCVKdStpmymkKse7GRHPwi01BgdIs7miaTzaQ")
            .build();

    Token requestToken = service.getRequestToken();
                
                
    public LoginFrame() throws URISyntaxException {
        initComponents();

        String authUrl = service.getAuthorizationUrl(requestToken);
        final URI uri = new URI(authUrl);
        twitterLinkButton.setText("<HTML><FONT color=\"#000099\"><U>Get a auth code</U></FONT></HTML>");
        twitterLinkButton.addActionListener(new OpenUrlAction(uri));
        twitterLinkButton.setBorderPainted(false);
        twitterLinkButton.setOpaque(false);

    }
    class OpenUrlAction implements ActionListener{
        private final URI uri;

        public OpenUrlAction(URI uri) {
            this.uri = uri;
        }
        
        @Override
        public void actionPerformed(ActionEvent e){
            open(uri);
        }
        
        private void open(URI uri) {
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop.getDesktop().browse(uri);
            } catch (IOException e) { 
                System.out.println("Desktop Error: " + e.getMessage());
            }
        } else {
        /* TODO: error handling */ 
        }
    }
    

  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        okbutton = new javax.swing.JButton();
        verificationCode = new javax.swing.JTextField();
        twitterLinkButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(488, 311));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Login to Twitter");

        okbutton.setText("ok");
        okbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okbuttonActionPerformed(evt);
            }
        });

        verificationCode.setMaximumSize(new java.awt.Dimension(84, 28));
        verificationCode.setMinimumSize(new java.awt.Dimension(84, 28));

        twitterLinkButton.setText("jButton1");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(okbutton)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(165, 165, 165)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(twitterLinkButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel3)))
                        .add(layout.createSequentialGroup()
                            .add(155, 155, 155)
                            .add(verificationCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(94, 94, 94)
                .add(jLabel3)
                .add(27, 27, 27)
                .add(twitterLinkButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(verificationCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(okbutton)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okbuttonActionPerformed
        // TODO add your handling code here:
        if (verificationCode.getText().length() == 7) {

            Verifier verifier = new Verifier(verificationCode.getText());

            Token accessToken = service.getAccessToken(requestToken, verifier);
            OAuthRequest request = new OAuthRequest(Verb.GET, GET_USER_URL);

            service.signRequest(accessToken, request);
            org.scribe.model.Response response = request.send();
            String person = response.getBody();

            JsonParser parser  = new JsonParser();

            JsonObject json = (JsonObject) parser.parse(person);

            MainFrame frame = new MainFrame(accessToken, json, service);
            frame.setVisible(true);
            this.setVisible(false);
            this.dispose();
        }
        else {
            JOptionPane.showMessageDialog(null, "Check your auth code", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_okbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LoginFrame().setVisible(true);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton okbutton;
    private javax.swing.JButton twitterLinkButton;
    private javax.swing.JTextField verificationCode;
    // End of variables declaration//GEN-END:variables
}
